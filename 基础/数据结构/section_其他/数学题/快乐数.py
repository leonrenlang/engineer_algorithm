# 编写一个算法来判断一个数 n 是不是快乐数。
#
# 「快乐数」定义为：对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和，然后重复这个过程直到这个数变为 1，也可能是 无限循环 但始终变不到 1。如果 可以变为  1，那么这个数就是快乐数。
#
# 如果 n 是快乐数就返回 True ；不是，则返回 False 。
#
#  
#
# 示例：
#
# 输入：19
# 输出：true
# 解释：
# 12 + 92 = 82
# 82 + 22 = 68
# 62 + 82 = 100
# 12 + 02 + 02 = 1
# 时间复杂度O(logn)，空间复杂度O(logn)


# 思想：
# - 有三种可能
# 1. 数字是快乐数  2. 数字会进入无限循环  3. 数字会趋于无穷大，但是我们可以发现999
# 进行操作后是243，也就是说数字大于一定程度后就不会增大。所以只有前两种可能
# - 我们将已经经过的数放入哈希集中，持续判断，知道等于1，或者已经出现过
def isHappy(n):
    def get_next(n):
        res = 0
        str_n = str(n)
        for i in range(len(str_n)):
            res += int(str_n[i]) ** 2
        return res

    seen = set()
    while n != 1 and n not in seen:
        seen.add(n)
        n = get_next(n)
    return n == 1


if __name__ == '__main__':
    print(isHappy(100))
