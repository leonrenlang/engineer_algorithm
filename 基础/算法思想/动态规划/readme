
# 动态规划本质就是利用空间优化了的递归方法
# 可以用动态规划的均可以用递归，但是可以用递归的不一定能够能用动态规划

# 动态规划框架:
# 1. 初始化
# 决定问题规模的可变状态有几个？
# 可变状态值的范围？
# dp[状态1][状态2][..]代表什么意思？

# 2. base case
# dp[0][...] = base
# dp[...][0] = base
# ...

# 3. 进行状态转移
# for 状态1 in 状态1的所有取值：
#     for 状态2 in 状态2的所有取值：
#         for ...
#             dp[状态1][状态2][...] = 求最值(选择1，选择2...)


# 动态规划备忘录框架：
# -正常的递归写法，每次计算出一个结果，将其放入Memo(通常是一个哈希表）
# -在解决每个问题之前，判断当前问题是否已经解决
# -备忘录与数组动态规划的比较
#   - 备忘录是自顶向下，数组动态规划是自底向上
#   - 备忘录方法仍需要使用函数调用函数，会存在一些冗余，会稍慢一些，但是写法更简单