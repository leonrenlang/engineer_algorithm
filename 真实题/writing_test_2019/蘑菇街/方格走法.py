# 题目描述
# 有一个X*Y的网格，小团要在此网格上从左上角到右下角，只能走格点且只能向右或向下走。请设计一个算法，计算小团有多少种走法。给定两个正整数int x,int y，请返回小团的走法数目。

# 输入描述:
# 输入包括一行，空格隔开的两个正整数x和y，取值范围[1,10]。
# 输出描述:
# 输出一行，表示走法的数目
# 示例1
# 输入
# 3 2
# 输出
# 10

# 思想：动态规划，为了代码书写方便，将左上到右下问题等价于右下到左上问题
# x*y的网格有（x+1)*(y+1)个点，上边界和左边界的走法都只有一种，其余的点的走法等于
# 其上左之和。
def process(x, y):
    dp = [[1 for _ in range(y + 1)] for _ in range(x + 1)]
    for i in range(1, x + 1):
        for j in range(1, y + 1):
            dp[i][j] = dp[i - 1][j] + dp[i][j - 1]
    print(dp[-1][-1])


if __name__ == '__main__':
    x, y = [int(item) for item in input().split()]
    process(x, y)
